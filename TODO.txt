Convert Node and DLL to use unique_ptr (can't blame me for importing these from last assignment)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

RETROSPECTIVE

+Using strings for all user input and converting them to ints when and where it becomes useful has high overhead, but strong results for UX (imo)
+ Default args create a convention that tells programmers what the input will be converted to - good and bad, conventions are mental overhead
+ Smart pointers are very hard to understand... I kinda like managing memory, it's fun, gdb and valgrind are cool
+This project may be the final nail in the coffin for my unhealthy obsession with making strictly typed languages behave as though they're more loosely typed - see git log at 5/8 around 2am.
+ The runtime efficiency is worth to have to write more complicated data structures and algorithms (if you're using such a language and runtime efficiency isn't paramount, you should be using something else like python...)
+ Several times when I'm handling an exception I tell the user to "please try again", which is not always a good idea; some exceptions are going to be thrown by bugs in my code, not because of user error, and this could be frustrating from a UX perspective. What is best practice for informing the user about what's going on here? Displaying some error code and saying "please submit a bug report"? Seems like too much for the purposes of this project but definitely worth thinking about.
 + My biggest gripe with this part of the design is that you can't have an event starting in one week and crossing the boundary into the next week, but I think this is beyond the scope of the assignment - we're practicing generic programming, not writing a reservation tracker that will be used in the real world; my code may suck, but not because I don't understand the concepts we're learning, just because I chose to write the basic unit of the program as something more limiting (weekdaytime instead of datetime) because I am scarred from previous experience handling datetimes without stdlib objects to represent them (Can't wait for c++20 to be accepted widely!)
...
